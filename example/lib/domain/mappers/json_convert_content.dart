// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.

import 'package:example/domain/mappers/login_mapper.dart';
import 'package:example/domain/models/user.dart';

class JsonConvert<T> {
  T fromJson(Map<String, dynamic> json) {
    return _getFromJson<T>(runtimeType, this, json);
  }

  Map<String, dynamic> toJson() {
    return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
      case User:
        return LoginMapper.fromJson(json);
      // case RoleListResponseData:
      //   return roleListResponseDataFromJson(data as RoleListResponseData, json)
      //       as T;
      // case RouteListResponse:
      //   return routeListResponseFromJson(data as RouteListResponse, json) as T;
      // case RouteListResponseData:
      //   return routeListResponseDataFromJson(
      //       data as RouteListResponseData, json) as T;
      // case ReqResponse:
      //   return reqResponseFromJson(data as ReqResponse, json) as T;
      // case HomeMenuResponse:
      //   return homeMenuResponseFromJson(data as HomeMenuResponse, json) as T;
      // case HomeMenuResponseData:
      //   return homeMenuResponseDataFromJson(data as HomeMenuResponseData, json)
      //       as T;
      // case HomemanuResponseDatamanuList:
      //   return homemanuResponseDatamanuListFromJson(
      //       data as HomemanuResponseDatamanuList, json) as T;
      // case UserResponse:
      //   return userResponseFromJson(data as UserResponse, json) as T;
      // case UserResponseData:
      //   return userResponseDataFromJson(data as UserResponseData, json) as T;
    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
    switch (type) {
      // case User:
      //   return LoginMapper.;
    //   case RoleListResponseData:
    //     return roleListResponseDataToJson(data as RoleListResponseData);
    //   case RouteListResponse:
    //     return routeListResponseToJson(data as RouteListResponse);
    //   case RouteListResponseData:
    //     return routeListResponseDataToJson(data as RouteListResponseData);
    //   case ReqResponse:
    //     return reqResponseToJson(data as ReqResponse);
    //   case HomeMenuResponse:
    //     return homeMenuResponseToJson(data as HomeMenuResponse);
    //   case HomeMenuResponseData:
    //     return homeMenuResponseDataToJson(data as HomeMenuResponseData);
    //   case HomemanuResponseDatamanuList:
    //     return homemanuResponseDatamanuListToJson(
    //         data as HomemanuResponseDatamanuList);
    //   case UserResponse:
    //     return userResponseToJson(data as UserResponse);
    //   case UserResponseData:
    //     return userResponseDataToJson(data as UserResponseData);
    }
    return data as T;
  }

  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {
      // case 'RoleListResponse':
      //   return RoleListResponse().fromJson(json);
      // case 'RoleListResponseData':
      //   return RoleListResponseData().fromJson(json);
      // case 'RouteListResponse':
      //   return RouteListResponse().fromJson(json);
      // case 'RouteListResponseData':
      //   return RouteListResponseData().fromJson(json);
      // case 'ReqResponse':
      //   return ReqResponse().fromJson(json);
      // case 'HomeMenuResponse':
      //   return HomeMenuResponse().fromJson(json);
      // case 'HomeMenuResponseData':
      //   return HomeMenuResponseData().fromJson(json);
      // case 'HomemanuResponseDatamanuList':
      //   return HomemanuResponseDatamanuList().fromJson(json);
      // case 'UserResponse':
      //   return UserResponse().fromJson(json);
      // case 'UserResponseData':
      //   return UserResponseData().fromJson(json);
    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    // switch (type) {
    //   case 'RoleListResponse':
    //     return List<RoleListResponse>();
    //   case 'RoleListResponseData':
    //     return List<RoleListResponseData>();
    //   case 'RouteListResponse':
    //     return List<RouteListResponse>();
    //   case 'RouteListResponseData':
    //     return List<RouteListResponseData>();
    //   case 'ReqResponse':
    //     return List<ReqResponse>();
    //   case 'HomeMenuResponse':
    //     return List<HomeMenuResponse>();
    //   case 'HomeMenuResponseData':
    //     return List<HomeMenuResponseData>();
    //   case 'HomemanuResponseDatamanuList':
    //     return List<HomemanuResponseDatamanuList>();
    //   case 'UserResponse':
    //     return List<UserResponse>();
    //   case 'UserResponseData':
    //     return List<UserResponseData>();
    // }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}
